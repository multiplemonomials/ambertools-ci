language: cpp

matrix:
  include:
     - { os: linux, env: TEST_TASK=serial.MM CMAKE_OPTS="-DPACKAGE_TYPE=TBZ2" MPI=true COMPILER="gcc" } # amber17/test
     - { os: linux, env: TEST_TASK=serial.MM CMAKE_OPTS="-DPACKAGE_TYPE=TBZ2" MPI=false COMPILER="gcc" } # amber17/test
     
    # - { os: osx, env: TEST_TASK=serial.MM CMAKE_OPTS="" COMPILER="clang"} # amber17/test

    # - { os: linux, env: TEST_TASK=serial.QMMM MINICONDA_WILL_BE_INSTALLED=True } # amber17/test
    # - { os: linux, env: TEST_TASK=serial.sander.SEBOMD MINICONDA_WILL_BE_INSTALLED=True } # amber17/test
    # - { os: linux, env: TEST_TASK=fast MINICONDA_WILL_BE_INSTALLED=True } # AmberTools/test
    # - { os: linux, env: TEST_TASK=python} # Ambertools/test + amber17/test
    # - { os: linux, env: TEST_TASK=mmpbsa MINICONDA_WILL_BE_INSTALLED=True } # Ambertools/test
    # - { os: linux, env: TEST_TASK=rism MINICONDA_WILL_BE_INSTALLED=True } # Ambertools/test
       # - { os: linux, env: AMBER_INSTALL_MPI=True}
    # - { os: linux, env: TEST_TASK=python USE_WITH_PYTHON=True }
    # - { os: linux, env: TEST_TASK=fast} 
     # - { os: linux, env: PYTHON_VERSION=2.7 USE_AMBER_PREFIX=True TEST_TASK=fast} # Ambertools/test # not sure why failed
sudo: true

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - unzip
    - csh
    - flex
    - patch
    - openmpi-bin
    - openmpi-common
    - libopenmpi-dev
    - xutils-dev
    - clang
    - python-tk

install:
    - pip install --user -r requirements.txt
    - git clone https://github.com/Amber-MD/ambertools-binary-build && cp ambertools-binary-build/conda_tools/amber.run_tests $HOME/
    - cp EXCLUDED_TESTS $HOME/
    - source devtools/ci/load_functions.sh # download_ambertools, install_ambertools_travis, run_tests
    - install_cmake_travis
    - download_ambertools
    - install_ambertools_travis

script:
    - echo "tests currently disabled"

after_success:
    - echo "Congrats. Happy computing"

notifications:
  email:
    recipients:
      - nhai.qn@gmail.com
    on_success: never # default: change
    on_failure: never # default: always
  
